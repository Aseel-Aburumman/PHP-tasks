pass= Aseel123$
--------------------------
    <button><a href="#" onclick="<?php session_destroy();  ?>">Logout</a></button>
        <button><a href="#" onclick="<?php session_destroy(); ?>">Logout</a></button>

---------------------------

CREATE TABLE users (
    users_id INT AUTO_INCREMENT PRIMARY KEY,
    Full_name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    mobile INT(20),
    password VARCHAR(255) NOT NULL,
    role_id INT(200),
    FOREIGN KEY (role_id) REFERENCES roles(role_id)
);
------------------------------------
ALTER TABLE users ADD COLUMN profile_picture VARCHAR(255);

-------------------------------------
CREATE TABLE roles (
    role_id INT AUTO_INCREMENT PRIMARY KEY,
    role_name VARCHAR(255) NOT NULL


);
-----------------------------------
hi asool :3 you are connected to the database
Warning
: Undefined variable $full_name in
C:\xampp\htdocs\tasks\PHPFormValidation\register.php
on line
28

Full name must be in 4 sections: first name, middle name, last name, and family name.

Register
Full name must be in 4 sections: first name, middle name, last name, and family name.

Full Name

Email

mobile

Password

Confirm Password

.
-----------------------------------------------------------------------------
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $Full_name = trim($_POST["Full_name"]);
    $email = trim($_POST["email"]);
    $mobile = trim($_POST["mobile"]);
    $password = trim($_POST["password"]);
    $confirm_password = trim($_POST["confirm_password"]);


    $errors = [];

    // Validate email
    if (empty($email)) {
        $errors[] = "Email is required.";
    } elseif (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
        $errors[] = "Invalid email format.";
    }

    // Validate mobile number
    if (empty($mobile)) {
        $errors[] = "Mobile number is required.";
    } elseif (!preg_match('/^\d{10}$/', $mobile)) {
        $errors[] = "Mobile number must be 10 digits.";
    }

    // Validate full name
    if (empty($full_name)) {
        $errors[] = "Full name is required.";
    } else {
        $namePattern = '/^[a-zA-Z]+$/';
        $sections = preg_split('/\s+/', $full_name);
        if (count($sections) !== 4) {
            $errors[] = "Full name must be in 4 sections: first name, middle name, last name, and family name.";
        } else {
            foreach ($sections as $section) {
                if (!preg_match($namePattern, $section)) {
                    $errors[] = "Each part of the full name must contain only letters.";
                    break;
                }
            }
        }
    }

    // Validate password
    if (empty($password)) {
        $errors[] = "Password is required.";
    } elseif (!preg_match('/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/', $password)) {
        $errors[] = "Password must be at least 8 characters long, contain upper case, lower case, numbers, and special characters, and have no spaces.";
    }

    // Validate confirm password
    if (empty($confirm_password)) {
        $errors[] = "Confirm Password is required.";
    } elseif ($password !== $confirm_password) {
        $errors[] = "Passwords do not match.";
    }

    // Process the form if no errors
    if (empty($errors)) {
        $hashed_password = password_hash($password, PASSWORD_DEFAULT);

        $sql = "INSERT INTO users (name, email, mobile, full_name, password) VALUES (?, ?, ?, ?, ?)";
        $stmt = $conn->prepare($sql);

        // Bind parameters
        $stmt->bind_param("sssss", $name, $email, $mobile, $full_name, $hashed_password);

        if ($stmt->execute()) {
            echo "Registration successful!";
        } else {
            echo "Error: " . $stmt->error;
        }

        $stmt->close();
        $conn->close();
    } else {
        foreach ($errors as $error) {
            echo "<p>$error</p>";
        }
    }
}